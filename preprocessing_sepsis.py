# -*- coding: utf-8 -*-
"""Preprocessing_Sepsis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10o6LZPP2m1fxXz7IuOGMF1hTtVJiqs9a
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

# Load the dataset
file_path = '/content/drive/MyDrive/Dataset.csv'
df = pd.read_csv(file_path)

# Calculate percentage of null values in each column
null_percentages = df.isnull().mean() * 100

# Sort and display
null_percentages = null_percentages.sort_values(ascending=False)
print(null_percentages)

import pandas as pd

# Load the dataset (update the file path as needed)
file_path = "/content/drive/MyDrive/Dataset.csv"  # Change to your actual file path
df = pd.read_csv(file_path)

# Check the percentage of missing values in each column
missing_percent = df.isnull().mean() * 100

# Drop columns with more than 85% missing values
columns_to_keep = missing_percent[missing_percent <= 85].index
df_cleaned = df[columns_to_keep]

# Drop duplicate rows if any
df_cleaned = df_cleaned.drop_duplicates()

# Fill remaining missing values
for col in df_cleaned.columns:
    if df_cleaned[col].dtype == 'object':  # Categorical columns
        df_cleaned[col].fillna(df_cleaned[col].mode()[0], inplace=True)
    else:  # Numerical columns
        df_cleaned[col].fillna(df_cleaned[col].mean(), inplace=True)

# Save the cleaned dataset
cleaned_file_path = "Cleaned_Dataset.csv"
df_cleaned.to_csv(cleaned_file_path, index=False)

print(f"Cleaned dataset saved as {cleaned_file_path}")

print(df_cleaned.isnull().sum())

dropped_columns = missing_percent[missing_percent > 85].index
print("Dropped Columns:", list(dropped_columns))

print(f"Duplicate rows before removal: {df.duplicated().sum()}")
print(f"Duplicate rows after removal: {df_cleaned.duplicated().sum()}")

print(f"Original shape: {df.shape}")
print(f"Cleaned shape: {df_cleaned.shape}")

df_cleaned.head()

df_check = pd.read_csv("Cleaned_Dataset.csv")
print(df_check.info())  # Check if the file was saved properly

import pandas as pd

# Step 1: Load the dataset
file_path = "/content/drive/MyDrive/Cleaned_Dataset.csv"  # Update if needed
df = pd.read_csv(file_path)

# Step 2: Drop specified columns
columns_to_remove = ['Hour', 'Glucose', 'Unit1', 'Unit2', 'HospAdmTime', 'ICULOS', 'Patient_ID']
df_cleaned = df.drop(columns=columns_to_remove, errors='ignore')



# Step 4: Save the new dataset
output_path = "/content/drive/MyDrive/Cleaned_Dataset_No_Unwanted_Columns.csv"
df_cleaned.to_csv(output_path, index=False)
print(f"\nNew dataset saved to: {output_path}")

import pandas as pd

# Step 1: Load the dataset
file_path = "/content/drive/MyDrive/Cleaned_Dataset.csv"  # Update path if needed
df = pd.read_csv(file_path)

# Step 2: Drop specified columns
columns_to_remove = ['Hour', 'Glucose', 'Unit1', 'Unit2', 'HospAdmTime', 'ICULOS', 'Patient_ID']
df = df.drop(columns=columns_to_remove, errors='ignore')

# Step 3: Reduce to 3 lakh rows (300,000)
# Use sample if you want random selection; use head if you want the first 3 lakh rows
df_reduced = df.sample(n=300000, random_state=42) if len(df) > 300000 else df

# Step 4: Save the reduced dataset
reduced_path = "/content/drive/MyDrive/Cleaned_Dataset_path.csv"
df_reduced.to_csv(reduced_path, index=False)

print(f"Reduced dataset with {len(df_reduced)} rows saved to: {reduced_path}")

!pip install imbalanced-learn  # Run this once if not already installed

import pandas as pd
from imblearn.over_sampling import SMOTE

# Use uploaded file path
file_path = '/content/drive/MyDrive/Cleaned_Dataset_path.csv'
df = pd.read_csv(file_path)

# Step 1: Fill missing values
for col in df.columns:
    if df[col].dtype == 'object':
        df[col] = df[col].fillna(df[col].mode()[0])  # Fill with mode
    else:
        df[col] = df[col].fillna(df[col].mean())     # Fill with mean

# Step 2: Separate features and target
X = df.drop(columns=['SepsisLabel'])
y = df['SepsisLabel']

# Step 3: Apply SMOTE
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X, y)

# Step 4: Combine into new DataFrame
df_balanced = pd.DataFrame(X_resampled, columns=X.columns)
df_balanced['SepsisLabel'] = y_resampled

# Step 5: Save the balanced dataset
output_path = '/content/cleaned_sepsiss_data.csv'  # Use Colab's local storage or mount Google Drive if needed
df_balanced.to_csv(output_path, index=False)

# Confirmation
print(f"Saved successfully to: {output_path}")
print("\nBalanced class distribution:\n", df_balanced['SepsisLabel'].value_counts())

